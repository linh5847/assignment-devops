### Reusable workflow to plan terraform deployment, create artifact and upload to workflow artifacts for consumption ###
name: "Maven_Build"
permissions:
  actions: write
  attestations: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  models: read
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  security-events: write
  statuses: write
on:
  workflow_call:
    inputs:
      path:
        description: "Specifies the path of the root terraform module."
        required: true
        type: string
      gh_environment:
        description: "Specifies the GitHub deployment environment."
        required: false
        type: string
        default: null
      enable_TFSEC:
        description: "(Optional) Enables TFSEC IaC scans and code quality checks on Terraform configurations"
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Generate Coverage Report
        run: |
          mvn -B package --file pom.xml

      # - name: Upload Report
      #   uses: 'actions/upload-artifact@v4'
      #   with:
      #     name: jacoco-report
      #     path: ${{ github.workspace }}/target/site/jacoco/jacoco.xml

      - name: Jacoco Report to PR
        id: jacoco
        uses: madrapps/jacoco-report@main
        with:
          paths: |
            ${{ github.workspace }}/**/build/reports/jacoco/prodNormalDebugCoverage/prodNormalDebugCoverage.xml,
            ${{ github.workspace }}/**/build/reports/jacoco/**/debugCoverage.xml
            ${{ github.workspace }}/build/reports/jacoco/testCoverage/testCoverage.xml
            ${{ github.workspace }}/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: '# :lobster: Coverage Report'
          pass-emoji: ':green_circle:'
          fail-emoji: ':red_circle:'

      - name: Get the Coverage info
        run: |
          echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
          echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"

      - name: Save Coverage To Environment Variable
        run: |
          echo "TOTAL_COVERAGE=${{ steps.jacoco.outputs.coverage-overall }}" >> $GITHUB_ENV
          echo "CHANGED_FILES_COVERAGE=${{ steps.jacoco.outputs.coverage-changed-files }}" >> $GITHUB_ENV

      # - name: Print & Check Coverage Info
      #   run: |
      #     import os
      #     import sys
      #     print("Total Coverage: " + str(os.environ["TOTAL_COVERAGE"]))
      #     print("Changed Files Coverage: " + str(os.environ["CHANGED_FILES_COVERAGE"]))
      #     if float(os.environ["TOTAL_COVERAGE"]) < 80 or float(os.environ["CHANGED_FILES_COVERAGE"]) < 80:
      #       print("Insufficient Coverage!")
      #       sys.exit() # Cause Status Check Failure due to noncompliant coverage
      #     sys.exit(0)
      #   shell: python
